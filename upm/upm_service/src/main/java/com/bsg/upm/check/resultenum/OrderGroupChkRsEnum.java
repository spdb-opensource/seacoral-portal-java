package com.bsg.upm.check.resultenum;

public enum OrderGroupChkRsEnum implements ChkRsInterface {

    SUCCESS(OK, "OK"),

    ILLEGAL_ID_NOT_EXIST(ORDER_GROUP_CORE, "该申请单组(id:{})不存在。"),

    ADD_ILLEGAL_CNT_OVER_LIMIT(ORDER_GROUP_CORE + 11001, "申请数量不能大于{}."),

    ADD_ILLEGAL_BUSINESS_SYSTEM_NAME_MUST_NOT_BE_BLANK(ORDER_GROUP_CORE + 11021, "业务系统名称不能为空。"),
    ADD_ILLEGAL_BUSINESS_SUBSYSTEM_NAME_MUST_NOT_BE_BLANK(ORDER_GROUP_CORE + 11031, "业务子系统名称不能为空。"),
    ADD_ILLEGAL_TYPE_MUST_NOT_BE_BLANK(ORDER_GROUP_CORE + 11011, "申请单组类型不能为空。"), 
    ADD_ILLEGAL_ID_MUST_NOT_BE_BLANK(ORDER_GROUP_CORE + 11013, "申请单组ID不能为空。"), 
    ADD_ILLEGAL_ACTIONTYPE_MUST_NOT_BE_BLANK(ORDER_GROUP_CORE + 11014, "任务类型不能为空。"), 
    ADD_ILLEGAL_TASKID_MUST_NOT_BE_BLANK(ORDER_GROUP_CORE + 11015, "任务ID不能为空。"), 
    ADD_ILLEGAL_TYPE_NOT_EXIST(ORDER_GROUP_CORE + 11012, "该申请单组类型(type:{})不存在。"),
    
    ADD_ILLEGAL_PORT_MUST_NOT_BE_NULL(ORDER_GROUP_CORE + 11021, "端口不能为空。"), 
    
    ADD_ILLEGAL_SITE_NAME_MUST_NOT_BE_BLANK(ORDER_GROUP_CORE + 11041, "站点不能为空。"), 

    ADD_ILLEGAL_AREA_CODE_MUST_NOT_BE_BLANK(ORDER_GROUP_CORE + 11051, "区域不能为空。"), 

    ADD_ILLEGAL_NAME_MUST_NOT_BE_BLANK(ORDER_GROUP_CORE + 11061, "名称不能为空。"), 
    ADD_ILLEGAL_NAME_FORMAT_ERROR(ORDER_GROUP_CORE + 11062, "名称必须为字母和数字。"), 
    ADD_ILLEGAL_NAME_EXIST(ORDER_GROUP_CORE + 11063, "该名称({})已存在。"),
    ADD_ILLEGAL_ORDERGROUP_EXIST(ORDER_GROUP_CORE + 11064, "该申请单({})已存在，请到申请单页面查看。"),

    ADD_ILLEGAL_SHARDING_MUST_NOT_BE_NULL(ORDER_GROUP_CORE + 11071, "是否分片不能为空。"),

    ADD_ILLEGAL_ORDERS_FORMAT_ERROR(ORDER_GROUP_CORE + 11081, "格式错误。"),

    ADD_ILLEGAL_IMAGE_VERSION_NOT_BE_NULL(ORDER_GROUP_CORE + 11091, "{}镜像版本不能为空。"), 
    ADD_ILLEGAL_IMAGE_VERSION_NOT_EXIST(ORDER_GROUP_CORE + 11092, "该镜像版本({})不存在。"), 
    ADD_ILLEGAL_IMAGE_OUT_OR_DISABLED(ORDER_GROUP_CORE + 11093, "该镜像版本({})未启用."), 

    ADD_ILLEGAL_ARCH_MUST_NOT_BE_BLANK(ORDER_GROUP_CORE + 11101, "{}架构不能为空。"), 
    ADD_ILLEGAL_ARCH_MODEL_MUST_NOT_BE_BLANK(ORDER_GROUP_CORE + 11102, "{}架构模式不能为空。"), 
    ADD_ILLEGAL_ARCH_UNIT_MUST_NOT_BE_BLANK(ORDER_GROUP_CORE + 11103, "{}架构单元不能为空。"), 

    ADD_ILLEGAL_CPU_CNT_MUST_NOT_BE_NULL(ORDER_GROUP_CORE + 11111, "{}CPU数量不能为空。"),

    ADD_ILLEGAL_MEM_SIZE_MUST_NOT_BE_NULL(ORDER_GROUP_CORE + 11121, "{}内存容量不能为空。"), 

    ADD_ILLEGAL_DATA_DIR_SIZE_MUST_NOT_BE_NULL(ORDER_GROUP_CORE + 11131, "{}数据目录大小不能为空。"),

    ADD_ILLEGAL_DATA_DIR_TYPE_MUST_NOT_BE_BLANK(ORDER_GROUP_CORE + 11141, "{}数据目录类型不能为空。"), 
    ADD_ILLEGAL_DATA_DIR_TYPE_NOT_EXIST(ORDER_GROUP_CORE + 11142, "{}数据目录类型(code:{})不存在。"),

    ADD_ILLEGAL_LOG_DIR_SIZE_MUST_NOT_BE_NULL(ORDER_GROUP_CORE + 11151, "{}日志目录大小不能为空。"),

    ADD_ILLEGAL_NETWORK_BANDWIDTH_MUST_NOT_BE_NULL(ORDER_GROUP_CORE + 11161, "{}带宽不能为空。"), 

    ADD_ILLEGAL_CNT_BELOW_LIMIT(ORDER_GROUP_CORE + 11171, "分片结构，{}分片数量必须大于0。"), 
    ADD_ILLEGAL_CNT_ONE(ORDER_GROUP_CORE + 11172, "格式错误：非分片结构，数量必须为1。"),

    ADD_ILLEGAL_LOG_DIR_TYPE_MUST_NOT_BE_BLANK(ORDER_GROUP_CORE + 11181, "{}日志目录类型不能为空。"), 
    
    ADD_ILLEGAL_BACKUP_STORAGE_PERFORMANCE_MUST_NOT_BE_BLANK(ORDER_GROUP_CORE + 11191, "{}备份存储性能等级不能为空。"), 
    
    ADD_ILLEGAL_BACKUP_STORAGE_SIZE_MUST_NOT_BE_BLANK(ORDER_GROUP_CORE + 11201, "{}备份存储大小不能为空。"), 
    
    ADD_ILLEGAL_HA_MUST_NOT_BE_BLANK(ORDER_GROUP_CORE + 11211, "{}高可用不能为空。"), 
    
    ADD_ILLEGAL_CNT_MUST_NOT_BE_BLANK(ORDER_GROUP_CORE + 11221, "{}分片数量不能为空。"),
    
    ADD_ILLEGAL_DATA_DIR_PERFORMANCE_MUST_NOT_BE_BLANK(ORDER_GROUP_CORE + 11231, "{}存储性能等级不能为空。"), 
    
    
    UPDATE_ILLEGAL_FORBIDDEN(ORDER_GROUP_CORE + 12001, "不能编辑审批拒绝、执行中和执行成功的申请单。"),

    UPDATE_ILLEGAL_AREA_NOT_BE_EMPTY(ORDER_GROUP_CORE + 12051, "区域不能为空。"), 
    
    UPDATE_ILLEGAL_SITE_NOT_BE_EMPTY(ORDER_GROUP_CORE + 12052, "站点不能为空。"),

    UPDATE_ILLEGAL_NAME_MUST_NOT_BE_EMPTY(ORDER_GROUP_CORE + 12061, "名称不能为空。"), 
    UPDATE_ILLEGAL_NAME_EXIST(ORDER_GROUP_CORE + 12062, "该名称({})已存在。"),

    UPDATE_ILLEGAL_ORDERS_FORMAT_ERROR(ORDER_GROUP_CORE + 12081, "格式错误。"),

    UPDATE_ILLEGAL_IMAGE_VERSION_FORMAT_ERROR(ORDER_GROUP_CORE + 12091, "{}镜像版本不能为空。"), 
    UPDATE_ILLEGAL_IMAGE_VERSION_NOT_EXIST(ORDER_GROUP_CORE + 12092, "该镜像版本({})不存在。"), 
    UPDATE_ILLEGAL_IMAGE_OUT_OR_DISABLED(ORDER_GROUP_CORE + 12093, "该镜像版本({})未启用."), 

    UPDATE_ILLEGAL_ARCH_NAME_NOT_EXIST(ORDER_GROUP_CORE + 12102, "{}架构({})不存在。"),

    UPDATE_ILLEGAL_SCALE_NOT_EXIST(ORDER_GROUP_CORE + 12122, "{}性能套餐不存在。"),

    UPDATE_ILLEGAL_DATA_DIR_TYPE_NOT_EXIST(ORDER_GROUP_CORE + 12142, "{}数据目录类型(code:{})不存在。"),

    UPDATE_ILLEGAL_LOG_DIR_TYPE_NOT_EXIST(ORDER_GROUP_CORE + 12151, "{}日志目录类型(code:{})不存在。"),

    UPDATE_ILLEGAL_CNT_BELOW_LIMIT(ORDER_GROUP_CORE + 11171, "分片结构，{}分片数量必须大于0。"), 
    UPDATE_ILLEGAL_CNT_ONE(ORDER_GROUP_CORE + 11172, "格式错误：非分片结构，数量必须为1。"),

    AUDIT_ILLEGAL_APPROVED_REPEATEDLY(ORDER_GROUP_CORE + 13001, "该申请单({})已审批，不能重复审批。"),

    AUDIT_ILLEGAL_STATUS_FORMAT_ERROR(ORDER_GROUP_CORE + 13011, "格式错误。"),

    AUDIT_ILLEGAL_MSG_MUST_NOT_BE_NULL(ORDER_GROUP_CORE + 13021, "审批拒绝时，必须说明原因。"),

    CLONE_ILLEGAL_CNT_OVER_LIMIT(ORDER_GROUP_CORE + 14001, "克隆数量不能大于{}。"),

    EXECUTE_ILLEGAL_BECAUSE_NOT_APPROVED_OR_FAILURE(ORDER_GROUP_CORE + 15001, "只有审批通过和执行失败的申请单才能再次执行."),
    EXECUTE_ILLEGAL_BECAUSE_SERVGROUP_NOT_EXIST(ORDER_GROUP_CORE + 15002, "该申请单对应的原服务组已被删除，无法执行."),

    REMOVE_ILLEGAL_EXECUTEING_OR_FAILURE(ORDER_GROUP_CORE + 99001, "不能删除执行中和执行失败的申请单");

    private int code;
    private String msg;

    private OrderGroupChkRsEnum(int code, String msg) {
        this.code = code;
        this.msg = msg;
    }

    @Override
    public int getCode() {
        return this.code;
    }

    @Override
    public String getMsg() {
        return this.msg;
    }

}
